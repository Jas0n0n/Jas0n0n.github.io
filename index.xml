<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Sun Blog</title>
        <link>http://example.org/</link>
        <description>知行合一</description>
        <generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 08 Jul 2022 11:04:38 &#43;0800</lastBuildDate>
            <atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>TcpScanner Using Golang</title>
    <link>http://example.org/posts/sun-2d-tcpscanner/</link>
    <pubDate>Fri, 08 Jul 2022 11:04:38 &#43;0800</pubDate>
    <author>Jason</author>
    <guid>http://example.org/posts/sun-2d-tcpscanner/</guid>
    <description><![CDATA[1.0 基础版的非并发版扫描 package main import( &#34;fmt&#34; &#34;net&#34; ) func main(){ for i:=1;i&lt;=1024;i++{ address :=fmt.Sprintf(&#34;127.0.0.1:%d&#34;,i) conn,err:=net.Dial(&#34;tcp&#34;,address) if err!=nil{ //端口已关闭或过滤 continue } conn.Close() fmt.Printf(&#34;%d is open\n&#34;,i) } } 2.0 WaitGrop并发控制版扫描 package main import ( &#34;fmt&#34; &#34;net&#34; &#34;sync&#34; ) func main(){ var wg sync.WaitGroup for i:=0;i&lt;1024;i++{ wg.Add(1) go func(j int){ defer wg.Done address :=fmt.Sprintf(&#34;127.0.0.1:%d&#34;,j) conn,err :=net.Dial(&#34;tcp&#34;,address) if err !=nil{ return } }(i) } wg.Wait() } 3.0 多通道版端口扫描 package main import ( &#34;fmt&#34; &#34;net&#34; &#34;sort&#34; ) func worker(ports,results chan int){ for p:=range ports{ address :=fmt.]]></description>
</item>
<item>
    <title>使用Hugo搭建GitHub静态站点</title>
    <link>http://example.org/posts/sun-1st-post/</link>
    <pubDate>Fri, 08 Jul 2022 11:04:38 &#43;0800</pubDate>
    <author>Jason</author>
    <guid>http://example.org/posts/sun-1st-post/</guid>
    <description><![CDATA[Hello Hugo ​	My Name is Jason. I&rsquo;m a Coder,Nice to meet you!
1. Hugo Basic ​	https://gohugo.io/getting-started/quick-start/
$ hugo new site quickstart $ cd quickstart $ git clone https://github.com/dillonzq/LoveIt.git themes/LoveIt Local Run
$ hugo new posts/first_post.md $ hugo new posts/first_post.md $ echo theme = \&#34;LoveIt\&#34; &gt;&gt; config.toml $ hugo serve -D $ hugo --theme=LoveIt --baseUrl=&#34;https://Jas0n0n.github.io/&#34; 2.Github Page https://pages.github.com/ Page e.g. https://Jas0n0n.github.io/ git clone https://github.com/Jas0n0n/Jas0n0n.github.io 3.First Commit $ hugo --destination .]]></description>
</item>
<item>
    <title></title>
    <link>http://example.org/posts/%E8%80%83cissp%E7%9A%84%E6%94%B6%E7%9B%8A/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://example.org/posts/%E8%80%83cissp%E7%9A%84%E6%94%B6%E7%9B%8A/</guid>
    <description><![CDATA[概述 (ISC)²®(读作：ISC-Squared，国际信息系统安全认证联盟) 成立于1989年，是全球最大的网络、信息、软件与基础设施安全认证会员制非营利组织，是为信息安全专业人士职业生涯提供教育及认证服务的全球领导者。
CISSP® (Certified Information Systems Security Professional) – “(ISC)²®注册信息系统安全师” 认证是信息安全领域最被全球广泛认可的IT安全认证，一直以来被誉为业界的“金牌标准”。CISSP认证不仅是对个人信息安全专业知识的客观评估，也是全球公认的个人成就标准。
CISSP证书含金量 证书排名 从下图我们可以看出，CISSP属于专家级认证且涉及的知识域很宽。
官方介绍 以下资料出自《ISC2网络安全》公众号,国内持证人数已过4000：
收益 1 职业提升 ​	通过对安全领域全面的学习，具备多样的技能，在面对相关工作挑战时能更加自信从容，为自己创造更多的机会(升值加薪)。
2 令人尊敬 ​	在面对雇主、客户和同行，脱颖而出，扎实的基础能够为构建一个安全可靠的网络世界而做出自己的贡献。
3 专业的社区 ​	加入全球化的安全社区，有更多的资源来拓宽你的知识和人脉。
4 扩展知识体系 ​ CISSP通过八个安全知识域评估考试者的专业技能，通过开始即可证明你拥有设计、实施和管理一流网络安全项目的高级知识和技能。
相关岗位 当然也包括：安全开发工程师、安全测试工程师、法律顾问(信息安全)等相关工作岗位
学习教材推荐 推荐《CISSP官方学习指南》，目前英文版已更新到第九版(2021年),但国内最新的中文教材是第八版，虽然相差一个版本，但大多数知识点还是包括的，以下是购买链接(可长按图片,识别二维码直接购买)，建议还是买本实体书在考试前多翻两遍。
练习题资源 可添加小Lin老师的微信:lighthousewu，获取一份最新版本的习题]]></description>
</item>
</channel>
</rss>
